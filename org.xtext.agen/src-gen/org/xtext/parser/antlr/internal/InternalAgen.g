/*
 * generated by Xtext 2.25.0
 */
grammar InternalAgen;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.services.AgenGrammarAccess;

}

@parser::members {

 	private AgenGrammarAccess grammarAccess;

    public InternalAgenParser(TokenStream input, AgenGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected AgenGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getTypesTypesParserRuleCall_0());
			}
			lv_types_0_0=ruleTypes
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				add(
					$current,
					"types",
					lv_types_0_0,
					"org.xtext.Agen.Types");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleTypes
entryRuleTypes returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypesRule()); }
	iv_ruleTypes=ruleTypes
	{ $current=$iv_ruleTypes.current; }
	EOF;

// Rule Types
ruleTypes returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTypesAccess().getRunConfigurationParserRuleCall_0());
		}
		this_RunConfiguration_0=ruleRunConfiguration
		{
			$current = $this_RunConfiguration_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypesAccess().getFaultParserRuleCall_1());
		}
		this_Fault_1=ruleFault
		{
			$current = $this_Fault_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypesAccess().getFaultCondParserRuleCall_2());
		}
		this_FaultCond_2=ruleFaultCond
		{
			$current = $this_FaultCond_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypesAccess().getWhereParserRuleCall_3());
		}
		this_Where_3=ruleWhere
		{
			$current = $this_Where_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypesAccess().getCodeBlockParserRuleCall_4());
		}
		this_CodeBlock_4=ruleCodeBlock
		{
			$current = $this_CodeBlock_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypesAccess().getConditionParserRuleCall_5());
		}
		this_Condition_5=ruleCondition
		{
			$current = $this_Condition_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypesAccess().getSyncpointParserRuleCall_6());
		}
		this_Syncpoint_6=ruleSyncpoint
		{
			$current = $this_Syncpoint_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypesAccess().getLogParserRuleCall_7());
		}
		this_Log_7=ruleLog
		{
			$current = $this_Log_7.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleRunConfiguration
entryRuleRunConfiguration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRunConfigurationRule()); }
	iv_ruleRunConfiguration=ruleRunConfiguration
	{ $current=$iv_ruleRunConfiguration.current; }
	EOF;

// Rule RunConfiguration
ruleRunConfiguration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='RunConfiguration'
		{
			newLeafNode(otherlv_0, grammarAccess.getRunConfigurationAccess().getRunConfigurationKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getRunConfigurationAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='CoordinatorLocation'
		{
			newLeafNode(otherlv_2, grammarAccess.getRunConfigurationAccess().getCoordinatorLocationKeyword_2());
		}
		otherlv_3='='
		{
			newLeafNode(otherlv_3, grammarAccess.getRunConfigurationAccess().getEqualsSignKeyword_3());
		}
		(
			(
				lv_CoordinatorLocation_4_0=RULE_STRING
				{
					newLeafNode(lv_CoordinatorLocation_4_0, grammarAccess.getRunConfigurationAccess().getCoordinatorLocationSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRunConfigurationRule());
					}
					setWithLastConsumed(
						$current,
						"CoordinatorLocation",
						lv_CoordinatorLocation_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getRunConfigurationAccess().getSemicolonKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRunConfigurationAccess().getNodesNodeParserRuleCall_6_0());
				}
				lv_nodes_6_0=ruleNode
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRunConfigurationRule());
					}
					add(
						$current,
						"nodes",
						lv_nodes_6_0,
						"org.xtext.Agen.Node");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getRunConfigurationAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleNode
entryRuleNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNodeRule()); }
	iv_ruleNode=ruleNode
	{ $current=$iv_ruleNode.current; }
	EOF;

// Rule Node
ruleNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Node'
		{
			newLeafNode(otherlv_0, grammarAccess.getNodeAccess().getNodeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getNodeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNodeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getNodeAccess().getLeftParenthesisKeyword_2());
		}
		otherlv_3='firstAttachPoint'
		{
			newLeafNode(otherlv_3, grammarAccess.getNodeAccess().getFirstAttachPointKeyword_3());
		}
		otherlv_4='='
		{
			newLeafNode(otherlv_4, grammarAccess.getNodeAccess().getEqualsSignKeyword_4());
		}
		(
			(
				lv_firstAttachPoint_5_0=RULE_STRING
				{
					newLeafNode(lv_firstAttachPoint_5_0, grammarAccess.getNodeAccess().getFirstAttachPointSTRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNodeRule());
					}
					setWithLastConsumed(
						$current,
						"firstAttachPoint",
						lv_firstAttachPoint_5_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_6=';'
		{
			newLeafNode(otherlv_6, grammarAccess.getNodeAccess().getSemicolonKeyword_6());
		}
		otherlv_7='location'
		{
			newLeafNode(otherlv_7, grammarAccess.getNodeAccess().getLocationKeyword_7());
		}
		otherlv_8='='
		{
			newLeafNode(otherlv_8, grammarAccess.getNodeAccess().getEqualsSignKeyword_8());
		}
		(
			(
				lv_nodeLocation_9_0=RULE_STRING
				{
					newLeafNode(lv_nodeLocation_9_0, grammarAccess.getNodeAccess().getNodeLocationSTRINGTerminalRuleCall_9_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNodeRule());
					}
					setWithLastConsumed(
						$current,
						"nodeLocation",
						lv_nodeLocation_9_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			otherlv_10=';'
			{
				newLeafNode(otherlv_10, grammarAccess.getNodeAccess().getSemicolonKeyword_10_0());
			}
			otherlv_11='logData'
			{
				newLeafNode(otherlv_11, grammarAccess.getNodeAccess().getLogDataKeyword_10_1());
			}
			otherlv_12='='
			{
				newLeafNode(otherlv_12, grammarAccess.getNodeAccess().getEqualsSignKeyword_10_2());
			}
			(
				(
					lv_logLocations_13_0=RULE_ID
					{
						newLeafNode(lv_logLocations_13_0, grammarAccess.getNodeAccess().getLogLocationsIDTerminalRuleCall_10_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNodeRule());
						}
						addWithLastConsumed(
							$current,
							"logLocations",
							lv_logLocations_13_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)*
		)?
		otherlv_14=';'
		{
			newLeafNode(otherlv_14, grammarAccess.getNodeAccess().getSemicolonKeyword_11());
		}
		(
			(
				lv_faultIDs_15_0=RULE_ID
				{
					newLeafNode(lv_faultIDs_15_0, grammarAccess.getNodeAccess().getFaultIDsIDTerminalRuleCall_12_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNodeRule());
					}
					addWithLastConsumed(
						$current,
						"faultIDs",
						lv_faultIDs_15_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)*
		otherlv_16=')'
		{
			newLeafNode(otherlv_16, grammarAccess.getNodeAccess().getRightParenthesisKeyword_13());
		}
	)
;

// Entry rule entryRuleLog
entryRuleLog returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLogRule()); }
	iv_ruleLog=ruleLog
	{ $current=$iv_ruleLog.current; }
	EOF;

// Rule Log
ruleLog returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Logging'
		{
			newLeafNode(otherlv_0, grammarAccess.getLogAccess().getLoggingKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getLogAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLogRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getLogAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				lv_faultCond_3_0=RULE_ID
				{
					newLeafNode(lv_faultCond_3_0, grammarAccess.getLogAccess().getFaultCondIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLogRule());
					}
					setWithLastConsumed(
						$current,
						"faultCond",
						lv_faultCond_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_4=';'
			{
				newLeafNode(otherlv_4, grammarAccess.getLogAccess().getSemicolonKeyword_4_0());
			}
			otherlv_5='extraData'
			{
				newLeafNode(otherlv_5, grammarAccess.getLogAccess().getExtraDataKeyword_4_1());
			}
			otherlv_6='='
			{
				newLeafNode(otherlv_6, grammarAccess.getLogAccess().getEqualsSignKeyword_4_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLogAccess().getExtraDataCodeBlockParserRuleCall_4_3_0());
					}
					lv_extraData_7_0=ruleCodeBlock
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLogRule());
						}
						set(
							$current,
							"extraData",
							lv_extraData_7_0,
							"org.xtext.Agen.CodeBlock");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_8=';'
			{
				newLeafNode(otherlv_8, grammarAccess.getLogAccess().getSemicolonKeyword_5_0());
			}
			otherlv_9='stateBasedVariables'
			{
				newLeafNode(otherlv_9, grammarAccess.getLogAccess().getStateBasedVariablesKeyword_5_1());
			}
			otherlv_10='='
			{
				newLeafNode(otherlv_10, grammarAccess.getLogAccess().getEqualsSignKeyword_5_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLogAccess().getStateBasedCodeBlockParserRuleCall_5_3_0());
					}
					lv_stateBased_11_0=ruleCodeBlock
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLogRule());
						}
						set(
							$current,
							"stateBased",
							lv_stateBased_11_0,
							"org.xtext.Agen.CodeBlock");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_12='}'
		{
			newLeafNode(otherlv_12, grammarAccess.getLogAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleSyncpoint
entryRuleSyncpoint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSyncpointRule()); }
	iv_ruleSyncpoint=ruleSyncpoint
	{ $current=$iv_ruleSyncpoint.current; }
	EOF;

// Rule Syncpoint
ruleSyncpoint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Syncpoint'
		{
			newLeafNode(otherlv_0, grammarAccess.getSyncpointAccess().getSyncpointKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSyncpointAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSyncpointRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getSyncpointAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				lv_nodesDependant_3_0=RULE_ID
				{
					newLeafNode(lv_nodesDependant_3_0, grammarAccess.getSyncpointAccess().getNodesDependantIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSyncpointRule());
					}
					addWithLastConsumed(
						$current,
						"nodesDependant",
						lv_nodesDependant_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)*
		otherlv_4=';'
		{
			newLeafNode(otherlv_4, grammarAccess.getSyncpointAccess().getSemicolonKeyword_4());
		}
		otherlv_5='type'
		{
			newLeafNode(otherlv_5, grammarAccess.getSyncpointAccess().getTypeKeyword_5());
		}
		otherlv_6='='
		{
			newLeafNode(otherlv_6, grammarAccess.getSyncpointAccess().getEqualsSignKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSyncpointAccess().getTypeSyncpointTypeEnumRuleCall_7_0());
				}
				lv_type_7_0=rulesyncpointType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSyncpointRule());
					}
					set(
						$current,
						"type",
						lv_type_7_0,
						"org.xtext.Agen.syncpointType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8=';'
		{
			newLeafNode(otherlv_8, grammarAccess.getSyncpointAccess().getSemicolonKeyword_8());
		}
		otherlv_9='onFailure'
		{
			newLeafNode(otherlv_9, grammarAccess.getSyncpointAccess().getOnFailureKeyword_9());
		}
		otherlv_10='='
		{
			newLeafNode(otherlv_10, grammarAccess.getSyncpointAccess().getEqualsSignKeyword_10());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSyncpointAccess().getOnFailSyncpointOnFailEnumRuleCall_11_0());
				}
				lv_onFail_11_0=rulesyncpointOnFail
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSyncpointRule());
					}
					set(
						$current,
						"onFail",
						lv_onFail_11_0,
						"org.xtext.Agen.syncpointOnFail");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_12=';'
		{
			newLeafNode(otherlv_12, grammarAccess.getSyncpointAccess().getSemicolonKeyword_12());
		}
		otherlv_13='faultCond'
		{
			newLeafNode(otherlv_13, grammarAccess.getSyncpointAccess().getFaultCondKeyword_13());
		}
		otherlv_14='='
		{
			newLeafNode(otherlv_14, grammarAccess.getSyncpointAccess().getEqualsSignKeyword_14());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSyncpointAccess().getFaultCondFaultCondParserRuleCall_15_0());
				}
				lv_faultCond_15_0=ruleFaultCond
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSyncpointRule());
					}
					set(
						$current,
						"faultCond",
						lv_faultCond_15_0,
						"org.xtext.Agen.FaultCond");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_16=')'
		{
			newLeafNode(otherlv_16, grammarAccess.getSyncpointAccess().getRightParenthesisKeyword_16());
		}
	)
;

// Entry rule entryRuleFault
entryRuleFault returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFaultRule()); }
	iv_ruleFault=ruleFault
	{ $current=$iv_ruleFault.current; }
	EOF;

// Rule Fault
ruleFault returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Fault'
		{
			newLeafNode(otherlv_0, grammarAccess.getFaultAccess().getFaultKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFaultAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFaultRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getFaultAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='pointcut'
		{
			newLeafNode(otherlv_3, grammarAccess.getFaultAccess().getPointcutKeyword_3());
		}
		otherlv_4='='
		{
			newLeafNode(otherlv_4, grammarAccess.getFaultAccess().getEqualsSignKeyword_4());
		}
		(
			(
				lv_pointcut_5_0=RULE_STRING
				{
					newLeafNode(lv_pointcut_5_0, grammarAccess.getFaultAccess().getPointcutSTRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFaultRule());
					}
					setWithLastConsumed(
						$current,
						"pointcut",
						lv_pointcut_5_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_6=';'
		{
			newLeafNode(otherlv_6, grammarAccess.getFaultAccess().getSemicolonKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFaultAccess().getExecParamsExecParamsParserRuleCall_7_0());
				}
				lv_execParams_7_0=ruleExecParams
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFaultRule());
					}
					add(
						$current,
						"execParams",
						lv_execParams_7_0,
						"org.xtext.Agen.ExecParams");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getFaultAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleExecParams
entryRuleExecParams returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExecParamsRule()); }
	iv_ruleExecParams=ruleExecParams
	{ $current=$iv_ruleExecParams.current; }
	EOF;

// Rule ExecParams
ruleExecParams returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='ExecParams'
			{
				newLeafNode(otherlv_0, grammarAccess.getExecParamsAccess().getExecParamsKeyword_0_0());
			}
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getExecParamsAccess().getLeftParenthesisKeyword_0_1());
			}
			(
				(
					lv_name_2_0=RULE_ID
					{
						newLeafNode(lv_name_2_0, grammarAccess.getExecParamsAccess().getNameIDTerminalRuleCall_0_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExecParamsRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_2_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getExecParamsAccess().getRightParenthesisKeyword_0_3());
			}
		)
		    |
		(
			otherlv_4='ExecParams'
			{
				newLeafNode(otherlv_4, grammarAccess.getExecParamsAccess().getExecParamsKeyword_1_0());
			}
			(
				(
					lv_name_5_0=RULE_ID
					{
						newLeafNode(lv_name_5_0, grammarAccess.getExecParamsAccess().getNameIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExecParamsRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_5_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)?
			otherlv_6='{'
			{
				newLeafNode(otherlv_6, grammarAccess.getExecParamsAccess().getLeftCurlyBracketKeyword_1_2());
			}
			otherlv_7='where'
			{
				newLeafNode(otherlv_7, grammarAccess.getExecParamsAccess().getWhereKeyword_1_3());
			}
			otherlv_8='='
			{
				newLeafNode(otherlv_8, grammarAccess.getExecParamsAccess().getEqualsSignKeyword_1_4());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExecParamsAccess().getWhereJOIN_TYPEEnumRuleCall_1_5_0());
					}
					lv_where_9_0=ruleJOIN_TYPE
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExecParamsRule());
						}
						set(
							$current,
							"where",
							lv_where_9_0,
							"org.xtext.Agen.JOIN_TYPE");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_10=';'
				{
					newLeafNode(otherlv_10, grammarAccess.getExecParamsAccess().getSemicolonKeyword_1_6_0());
				}
				otherlv_11='whenToExecute{'
				{
					newLeafNode(otherlv_11, grammarAccess.getExecParamsAccess().getWhenToExecuteKeyword_1_6_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getExecParamsAccess().getWhenWhenParserRuleCall_1_6_2_0());
						}
						lv_when_12_0=ruleWhen
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExecParamsRule());
							}
							set(
								$current,
								"when",
								lv_when_12_0,
								"org.xtext.Agen.When");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_13='}'
				{
					newLeafNode(otherlv_13, grammarAccess.getExecParamsAccess().getRightCurlyBracketKeyword_1_6_3());
				}
			)?
			otherlv_14=';'
			{
				newLeafNode(otherlv_14, grammarAccess.getExecParamsAccess().getSemicolonKeyword_1_7());
			}
			otherlv_15='whatToExecute{'
			{
				newLeafNode(otherlv_15, grammarAccess.getExecParamsAccess().getWhatToExecuteKeyword_1_8());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExecParamsAccess().getWhatWhatParserRuleCall_1_9_0());
					}
					lv_what_16_0=ruleWhat
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExecParamsRule());
						}
						set(
							$current,
							"what",
							lv_what_16_0,
							"org.xtext.Agen.What");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_17='}'
			{
				newLeafNode(otherlv_17, grammarAccess.getExecParamsAccess().getRightCurlyBracketKeyword_1_10());
			}
			otherlv_18='}'
			{
				newLeafNode(otherlv_18, grammarAccess.getExecParamsAccess().getRightCurlyBracketKeyword_1_11());
			}
		)
	)
;

// Entry rule entryRuleWhat
entryRuleWhat returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWhatRule()); }
	iv_ruleWhat=ruleWhat
	{ $current=$iv_ruleWhat.current; }
	EOF;

// Rule What
ruleWhat returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getWhatAccess().getCodeBlockCodeBlockParserRuleCall_0_0());
				}
				lv_codeBlock_0_0=ruleCodeBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhatRule());
					}
					set(
						$current,
						"codeBlock",
						lv_codeBlock_0_0,
						"org.xtext.Agen.CodeBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getWhatAccess().getSleepSleepParserRuleCall_1_0());
				}
				lv_sleep_1_0=ruleSleep
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhatRule());
					}
					set(
						$current,
						"sleep",
						lv_sleep_1_0,
						"org.xtext.Agen.Sleep");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getWhatAccess().getExitExitParserRuleCall_2_0());
				}
				lv_exit_2_0=ruleExit
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhatRule());
					}
					set(
						$current,
						"exit",
						lv_exit_2_0,
						"org.xtext.Agen.Exit");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getWhatAccess().getBigPacketFaultBigPacketFaultParserRuleCall_3_0());
				}
				lv_bigPacketFault_3_0=ruleBigPacketFault
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhatRule());
					}
					set(
						$current,
						"bigPacketFault",
						lv_bigPacketFault_3_0,
						"org.xtext.Agen.BigPacketFault");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getWhatAccess().getLeakFaultLeakFaultParserRuleCall_4_0());
				}
				lv_leakFault_4_0=ruleLeakFault
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhatRule());
					}
					set(
						$current,
						"leakFault",
						lv_leakFault_4_0,
						"org.xtext.Agen.LeakFault");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getWhatAccess().getAlterPacketFaultAlterPacketFaultParserRuleCall_5_0());
				}
				lv_alterPacketFault_5_0=ruleAlterPacketFault
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhatRule());
					}
					set(
						$current,
						"alterPacketFault",
						lv_alterPacketFault_5_0,
						"org.xtext.Agen.AlterPacketFault");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getWhatAccess().getCpuLoaderCPULoaderParserRuleCall_6_0());
				}
				lv_cpuLoader_6_0=ruleCPULoader
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhatRule());
					}
					set(
						$current,
						"cpuLoader",
						lv_cpuLoader_6_0,
						"org.xtext.Agen.CPULoader");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getWhatAccess().getSkipExecutionSkipExecutionParserRuleCall_7_0());
				}
				lv_skipExecution_7_0=ruleSkipExecution
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhatRule());
					}
					set(
						$current,
						"skipExecution",
						lv_skipExecution_7_0,
						"org.xtext.Agen.SkipExecution");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getWhatAccess().getRepeatExecutionRepeatExecutionParserRuleCall_8_0());
				}
				lv_repeatExecution_8_0=ruleRepeatExecution
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhatRule());
					}
					set(
						$current,
						"repeatExecution",
						lv_repeatExecution_8_0,
						"org.xtext.Agen.RepeatExecution");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRepeatExecution
entryRuleRepeatExecution returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRepeatExecutionRule()); }
	iv_ruleRepeatExecution=ruleRepeatExecution
	{ $current=$iv_ruleRepeatExecution.current; }
	EOF;

// Rule RepeatExecution
ruleRepeatExecution returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='repeatExecution'
		{
			newLeafNode(otherlv_0, grammarAccess.getRepeatExecutionAccess().getRepeatExecutionKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getRepeatExecutionAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_times_2_0=RULE_INT
				{
					newLeafNode(lv_times_2_0, grammarAccess.getRepeatExecutionAccess().getTimesINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRepeatExecutionRule());
					}
					setWithLastConsumed(
						$current,
						"times",
						lv_times_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getRepeatExecutionAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleSkipExecution
entryRuleSkipExecution returns [String current=null]:
	{ newCompositeNode(grammarAccess.getSkipExecutionRule()); }
	iv_ruleSkipExecution=ruleSkipExecution
	{ $current=$iv_ruleSkipExecution.current.getText(); }
	EOF;

// Rule SkipExecution
ruleSkipExecution returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='skipExecution'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getSkipExecutionAccess().getSkipExecutionKeyword());
	}
;

// Entry rule entryRuleAlterPacketFault
entryRuleAlterPacketFault returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAlterPacketFaultRule()); }
	iv_ruleAlterPacketFault=ruleAlterPacketFault
	{ $current=$iv_ruleAlterPacketFault.current; }
	EOF;

// Rule AlterPacketFault
ruleAlterPacketFault returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='alterPacketFault'
		{
			newLeafNode(otherlv_0, grammarAccess.getAlterPacketFaultAccess().getAlterPacketFaultKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getAlterPacketFaultAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_originalData_2_0=RULE_INT
				{
					newLeafNode(lv_originalData_2_0, grammarAccess.getAlterPacketFaultAccess().getOriginalDataINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAlterPacketFaultRule());
					}
					setWithLastConsumed(
						$current,
						"originalData",
						lv_originalData_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getAlterPacketFaultAccess().getCommaKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAlterPacketFaultAccess().getKindOfAlterationAlterPacketFaultTypeEnumRuleCall_4_0());
				}
				lv_kindOfAlteration_4_0=ruleAlterPacketFaultType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAlterPacketFaultRule());
					}
					set(
						$current,
						"kindOfAlteration",
						lv_kindOfAlteration_4_0,
						"org.xtext.Agen.AlterPacketFaultType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getAlterPacketFaultAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleLeakFault
entryRuleLeakFault returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLeakFaultRule()); }
	iv_ruleLeakFault=ruleLeakFault
	{ $current=$iv_ruleLeakFault.current; }
	EOF;

// Rule LeakFault
ruleLeakFault returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='leakFault'
		{
			newLeafNode(otherlv_0, grammarAccess.getLeakFaultAccess().getLeakFaultKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getLeakFaultAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_nrofLeaks_2_0=RULE_INT
				{
					newLeafNode(lv_nrofLeaks_2_0, grammarAccess.getLeakFaultAccess().getNrofLeaksINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLeakFaultRule());
					}
					setWithLastConsumed(
						$current,
						"nrofLeaks",
						lv_nrofLeaks_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getLeakFaultAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleBigPacketFault
entryRuleBigPacketFault returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBigPacketFaultRule()); }
	iv_ruleBigPacketFault=ruleBigPacketFault
	{ $current=$iv_ruleBigPacketFault.current; }
	EOF;

// Rule BigPacketFault
ruleBigPacketFault returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='bigPacketFault'
		{
			newLeafNode(otherlv_0, grammarAccess.getBigPacketFaultAccess().getBigPacketFaultKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getBigPacketFaultAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_originalData_2_0=RULE_INT
				{
					newLeafNode(lv_originalData_2_0, grammarAccess.getBigPacketFaultAccess().getOriginalDataINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBigPacketFaultRule());
					}
					setWithLastConsumed(
						$current,
						"originalData",
						lv_originalData_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getBigPacketFaultAccess().getCommaKeyword_3());
		}
		(
			(
				lv_timesLarger_4_0=RULE_INT
				{
					newLeafNode(lv_timesLarger_4_0, grammarAccess.getBigPacketFaultAccess().getTimesLargerINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBigPacketFaultRule());
					}
					setWithLastConsumed(
						$current,
						"timesLarger",
						lv_timesLarger_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getBigPacketFaultAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleExit
entryRuleExit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExitRule()); }
	iv_ruleExit=ruleExit
	{ $current=$iv_ruleExit.current; }
	EOF;

// Rule Exit
ruleExit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='exit'
		{
			newLeafNode(otherlv_0, grammarAccess.getExitAccess().getExitKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getExitAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_type_2_0=RULE_INT
				{
					newLeafNode(lv_type_2_0, grammarAccess.getExitAccess().getTypeINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExitRule());
					}
					setWithLastConsumed(
						$current,
						"type",
						lv_type_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getExitAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleSleep
entryRuleSleep returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSleepRule()); }
	iv_ruleSleep=ruleSleep
	{ $current=$iv_ruleSleep.current; }
	EOF;

// Rule Sleep
ruleSleep returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='sleep'
		{
			newLeafNode(otherlv_0, grammarAccess.getSleepAccess().getSleepKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getSleepAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_time_2_0=RULE_INT
				{
					newLeafNode(lv_time_2_0, grammarAccess.getSleepAccess().getTimeINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSleepRule());
					}
					setWithLastConsumed(
						$current,
						"time",
						lv_time_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getSleepAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleCPULoader
entryRuleCPULoader returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCPULoaderRule()); }
	iv_ruleCPULoader=ruleCPULoader
	{ $current=$iv_ruleCPULoader.current; }
	EOF;

// Rule CPULoader
ruleCPULoader returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='cpuLoader'
		{
			newLeafNode(otherlv_0, grammarAccess.getCPULoaderAccess().getCpuLoaderKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getCPULoaderAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_amount_2_0=RULE_INT
				{
					newLeafNode(lv_amount_2_0, grammarAccess.getCPULoaderAccess().getAmountINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCPULoaderRule());
					}
					setWithLastConsumed(
						$current,
						"amount",
						lv_amount_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getCPULoaderAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleCodeBlock
entryRuleCodeBlock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCodeBlockRule()); }
	iv_ruleCodeBlock=ruleCodeBlock
	{ $current=$iv_ruleCodeBlock.current; }
	EOF;

// Rule CodeBlock
ruleCodeBlock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='BlockID'
			{
				newLeafNode(otherlv_0, grammarAccess.getCodeBlockAccess().getBlockIDKeyword_0_0());
			}
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getCodeBlockAccess().getLeftParenthesisKeyword_0_1());
			}
			(
				(
					lv_name_2_0=RULE_ID
					{
						newLeafNode(lv_name_2_0, grammarAccess.getCodeBlockAccess().getNameIDTerminalRuleCall_0_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCodeBlockRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_2_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getCodeBlockAccess().getRightParenthesisKeyword_0_3());
			}
		)
		    |
		(
			otherlv_4='CodeBlock'
			{
				newLeafNode(otherlv_4, grammarAccess.getCodeBlockAccess().getCodeBlockKeyword_1_0());
			}
			(
				(
					lv_name_5_0=RULE_ID
					{
						newLeafNode(lv_name_5_0, grammarAccess.getCodeBlockAccess().getNameIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCodeBlockRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_5_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)?
			otherlv_6='{'
			{
				newLeafNode(otherlv_6, grammarAccess.getCodeBlockAccess().getLeftCurlyBracketKeyword_1_2());
			}
			(
				otherlv_7='imports'
				{
					newLeafNode(otherlv_7, grammarAccess.getCodeBlockAccess().getImportsKeyword_1_3_0());
				}
				otherlv_8='{'
				{
					newLeafNode(otherlv_8, grammarAccess.getCodeBlockAccess().getLeftCurlyBracketKeyword_1_3_1());
				}
				(
					(
						lv_imports_9_0=RULE_CODE_BOX
						{
							newLeafNode(lv_imports_9_0, grammarAccess.getCodeBlockAccess().getImportsCODE_BOXTerminalRuleCall_1_3_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getCodeBlockRule());
							}
							setWithLastConsumed(
								$current,
								"imports",
								lv_imports_9_0,
								"org.xtext.Agen.CODE_BOX");
						}
					)
				)
				otherlv_10='}'
				{
					newLeafNode(otherlv_10, grammarAccess.getCodeBlockAccess().getRightCurlyBracketKeyword_1_3_3());
				}
				otherlv_11=','
				{
					newLeafNode(otherlv_11, grammarAccess.getCodeBlockAccess().getCommaKeyword_1_3_4());
				}
				otherlv_12='code'
				{
					newLeafNode(otherlv_12, grammarAccess.getCodeBlockAccess().getCodeKeyword_1_3_5());
				}
				otherlv_13='{'
				{
					newLeafNode(otherlv_13, grammarAccess.getCodeBlockAccess().getLeftCurlyBracketKeyword_1_3_6());
				}
			)?
			(
				(
					lv_code_14_0=RULE_CODE_BOX
					{
						newLeafNode(lv_code_14_0, grammarAccess.getCodeBlockAccess().getCodeCODE_BOXTerminalRuleCall_1_4_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCodeBlockRule());
						}
						setWithLastConsumed(
							$current,
							"code",
							lv_code_14_0,
							"org.xtext.Agen.CODE_BOX");
					}
				)
			)
			otherlv_15='}'
			{
				newLeafNode(otherlv_15, grammarAccess.getCodeBlockAccess().getRightCurlyBracketKeyword_1_5());
			}
		)
	)
;

// Entry rule entryRuleFaultCond
entryRuleFaultCond returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFaultCondRule()); }
	iv_ruleFaultCond=ruleFaultCond
	{ $current=$iv_ruleFaultCond.current; }
	EOF;

// Rule FaultCond
ruleFaultCond returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='FaultCond'
			{
				newLeafNode(otherlv_0, grammarAccess.getFaultCondAccess().getFaultCondKeyword_0_0());
			}
			(
				(
					lv_name_1_0=RULE_ID
					{
						newLeafNode(lv_name_1_0, grammarAccess.getFaultCondAccess().getNameIDTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFaultCondRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_1_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		    |
		(
			otherlv_2='FaultCond'
			{
				newLeafNode(otherlv_2, grammarAccess.getFaultCondAccess().getFaultCondKeyword_1_0());
			}
			(
				(
					lv_name_3_0=RULE_ID
					{
						newLeafNode(lv_name_3_0, grammarAccess.getFaultCondAccess().getNameIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFaultCondRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_3_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)?
			otherlv_4='{'
			{
				newLeafNode(otherlv_4, grammarAccess.getFaultCondAccess().getLeftCurlyBracketKeyword_1_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFaultCondAccess().getWhereWhereParserRuleCall_1_3_0());
					}
					lv_where_5_0=ruleWhere
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFaultCondRule());
						}
						set(
							$current,
							"where",
							lv_where_5_0,
							"org.xtext.Agen.Where");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_6=';'
			{
				newLeafNode(otherlv_6, grammarAccess.getFaultCondAccess().getSemicolonKeyword_1_4());
			}
			(
				otherlv_7='whenToIncrement{'
				{
					newLeafNode(otherlv_7, grammarAccess.getFaultCondAccess().getWhenToIncrementKeyword_1_5_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFaultCondAccess().getWhenWhenParserRuleCall_1_5_1_0());
						}
						lv_when_8_0=ruleWhen
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFaultCondRule());
							}
							set(
								$current,
								"when",
								lv_when_8_0,
								"org.xtext.Agen.When");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_9='}'
				{
					newLeafNode(otherlv_9, grammarAccess.getFaultCondAccess().getRightCurlyBracketKeyword_1_5_2());
				}
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getFaultCondAccess().getExtraDataCodeBlockParserRuleCall_1_6_0());
					}
					lv_extraData_10_0=ruleCodeBlock
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFaultCondRule());
						}
						set(
							$current,
							"extraData",
							lv_extraData_10_0,
							"org.xtext.Agen.CodeBlock");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_11='}'
			{
				newLeafNode(otherlv_11, grammarAccess.getFaultCondAccess().getRightCurlyBracketKeyword_1_7());
			}
		)
	)
;

// Entry rule entryRuleWhen
entryRuleWhen returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWhenRule()); }
	iv_ruleWhen=ruleWhen
	{ $current=$iv_ruleWhen.current; }
	EOF;

// Rule When
ruleWhen returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getWhenAccess().getBetweenRoundsBetweenRoundsParserRuleCall_0_0());
				}
				lv_betweenRounds_0_0=rulebetweenRounds
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhenRule());
					}
					set(
						$current,
						"betweenRounds",
						lv_betweenRounds_0_0,
						"org.xtext.Agen.betweenRounds");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getWhenAccess().getBetweenSecondsBetweenSecondsParserRuleCall_1_0());
				}
				lv_betweenSeconds_1_0=rulebetweenSeconds
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhenRule());
					}
					set(
						$current,
						"betweenSeconds",
						lv_betweenSeconds_1_0,
						"org.xtext.Agen.betweenSeconds");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getWhenAccess().getRandomRandomParserRuleCall_2_0());
				}
				lv_random_2_0=ruleRandom
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhenRule());
					}
					set(
						$current,
						"random",
						lv_random_2_0,
						"org.xtext.Agen.Random");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getWhenAccess().getRandomBetweenRoundRandomBetweenRoundParserRuleCall_3_0());
				}
				lv_randomBetweenRound_3_0=rulerandomBetweenRound
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhenRule());
					}
					set(
						$current,
						"randomBetweenRound",
						lv_randomBetweenRound_3_0,
						"org.xtext.Agen.randomBetweenRound");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			otherlv_4='ifCondition'
			{
				newLeafNode(otherlv_4, grammarAccess.getWhenAccess().getIfConditionKeyword_4_0());
			}
			otherlv_5='('
			{
				newLeafNode(otherlv_5, grammarAccess.getWhenAccess().getLeftParenthesisKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getWhenAccess().getIfConditionConditionParserRuleCall_4_2_0());
					}
					lv_ifCondition_6_0=ruleCondition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getWhenRule());
						}
						set(
							$current,
							"ifCondition",
							lv_ifCondition_6_0,
							"org.xtext.Agen.Condition");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_7=')'
			{
				newLeafNode(otherlv_7, grammarAccess.getWhenAccess().getRightParenthesisKeyword_4_3());
			}
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getWhenAccess().getFaultCondFaultCondParserRuleCall_5_0());
				}
				lv_faultCond_8_0=ruleFaultCond
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhenRule());
					}
					set(
						$current,
						"faultCond",
						lv_faultCond_8_0,
						"org.xtext.Agen.FaultCond");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			otherlv_9='syncpoint'
			{
				newLeafNode(otherlv_9, grammarAccess.getWhenAccess().getSyncpointKeyword_6_0());
			}
			otherlv_10='='
			{
				newLeafNode(otherlv_10, grammarAccess.getWhenAccess().getEqualsSignKeyword_6_1());
			}
			(
				(
					lv_syncpoint_11_0=RULE_ID
					{
						newLeafNode(lv_syncpoint_11_0, grammarAccess.getWhenAccess().getSyncpointIDTerminalRuleCall_6_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getWhenRule());
						}
						setWithLastConsumed(
							$current,
							"syncpoint",
							lv_syncpoint_11_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleRandom
entryRuleRandom returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRandomRule()); }
	iv_ruleRandom=ruleRandom
	{ $current=$iv_ruleRandom.current; }
	EOF;

// Rule Random
ruleRandom returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='random'
		{
			newLeafNode(otherlv_0, grammarAccess.getRandomAccess().getRandomKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getRandomAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_chance_2_0=RULE_INT
				{
					newLeafNode(lv_chance_2_0, grammarAccess.getRandomAccess().getChanceINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRandomRule());
					}
					setWithLastConsumed(
						$current,
						"chance",
						lv_chance_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getRandomAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRulebetweenSeconds
entryRulebetweenSeconds returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBetweenSecondsRule()); }
	iv_rulebetweenSeconds=rulebetweenSeconds
	{ $current=$iv_rulebetweenSeconds.current; }
	EOF;

// Rule betweenSeconds
rulebetweenSeconds returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='betweenSeconds'
		{
			newLeafNode(otherlv_0, grammarAccess.getBetweenSecondsAccess().getBetweenSecondsKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getBetweenSecondsAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_start_2_0=RULE_INT
				{
					newLeafNode(lv_start_2_0, grammarAccess.getBetweenSecondsAccess().getStartINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBetweenSecondsRule());
					}
					setWithLastConsumed(
						$current,
						"start",
						lv_start_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getBetweenSecondsAccess().getCommaKeyword_3());
		}
		(
			(
				lv_end_4_0=RULE_INT
				{
					newLeafNode(lv_end_4_0, grammarAccess.getBetweenSecondsAccess().getEndINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBetweenSecondsRule());
					}
					setWithLastConsumed(
						$current,
						"end",
						lv_end_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getBetweenSecondsAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRulebetweenRounds
entryRulebetweenRounds returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBetweenRoundsRule()); }
	iv_rulebetweenRounds=rulebetweenRounds
	{ $current=$iv_rulebetweenRounds.current; }
	EOF;

// Rule betweenRounds
rulebetweenRounds returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='betweenRound'
		{
			newLeafNode(otherlv_0, grammarAccess.getBetweenRoundsAccess().getBetweenRoundKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getBetweenRoundsAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_start_2_0=RULE_INT
				{
					newLeafNode(lv_start_2_0, grammarAccess.getBetweenRoundsAccess().getStartINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBetweenRoundsRule());
					}
					setWithLastConsumed(
						$current,
						"start",
						lv_start_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getBetweenRoundsAccess().getCommaKeyword_3());
		}
		(
			(
				lv_end_4_0=RULE_INT
				{
					newLeafNode(lv_end_4_0, grammarAccess.getBetweenRoundsAccess().getEndINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBetweenRoundsRule());
					}
					setWithLastConsumed(
						$current,
						"end",
						lv_end_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_5=','
		{
			newLeafNode(otherlv_5, grammarAccess.getBetweenRoundsAccess().getCommaKeyword_5());
		}
		(
			(
				lv_interval_6_0=RULE_INT
				{
					newLeafNode(lv_interval_6_0, grammarAccess.getBetweenRoundsAccess().getIntervalINTTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBetweenRoundsRule());
					}
					setWithLastConsumed(
						$current,
						"interval",
						lv_interval_6_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			otherlv_7=','
			{
				newLeafNode(otherlv_7, grammarAccess.getBetweenRoundsAccess().getCommaKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBetweenRoundsAccess().getConditionConditionParserRuleCall_7_1_0());
					}
					lv_condition_8_0=ruleCondition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBetweenRoundsRule());
						}
						set(
							$current,
							"condition",
							lv_condition_8_0,
							"org.xtext.Agen.Condition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_9=','
			{
				newLeafNode(otherlv_9, grammarAccess.getBetweenRoundsAccess().getCommaKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBetweenRoundsAccess().getRandomRandomParserRuleCall_8_1_0());
					}
					lv_random_10_0=ruleRandom
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBetweenRoundsRule());
						}
						set(
							$current,
							"random",
							lv_random_10_0,
							"org.xtext.Agen.Random");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_11=')'
		{
			newLeafNode(otherlv_11, grammarAccess.getBetweenRoundsAccess().getRightParenthesisKeyword_9());
		}
	)
;

// Entry rule entryRulerandomBetweenRound
entryRulerandomBetweenRound returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRandomBetweenRoundRule()); }
	iv_rulerandomBetweenRound=rulerandomBetweenRound
	{ $current=$iv_rulerandomBetweenRound.current; }
	EOF;

// Rule randomBetweenRound
rulerandomBetweenRound returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='randomBetweenRound'
		{
			newLeafNode(otherlv_0, grammarAccess.getRandomBetweenRoundAccess().getRandomBetweenRoundKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getRandomBetweenRoundAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_start_2_0=RULE_INT
				{
					newLeafNode(lv_start_2_0, grammarAccess.getRandomBetweenRoundAccess().getStartINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRandomBetweenRoundRule());
					}
					setWithLastConsumed(
						$current,
						"start",
						lv_start_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getRandomBetweenRoundAccess().getCommaKeyword_3());
		}
		(
			(
				lv_end_4_0=RULE_INT
				{
					newLeafNode(lv_end_4_0, grammarAccess.getRandomBetweenRoundAccess().getEndINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRandomBetweenRoundRule());
					}
					setWithLastConsumed(
						$current,
						"end",
						lv_end_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_5=','
		{
			newLeafNode(otherlv_5, grammarAccess.getRandomBetweenRoundAccess().getCommaKeyword_5());
		}
		(
			(
				lv_interval_6_0=RULE_INT
				{
					newLeafNode(lv_interval_6_0, grammarAccess.getRandomBetweenRoundAccess().getIntervalINTTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRandomBetweenRoundRule());
					}
					setWithLastConsumed(
						$current,
						"interval",
						lv_interval_6_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_7=','
		{
			newLeafNode(otherlv_7, grammarAccess.getRandomBetweenRoundAccess().getCommaKeyword_7());
		}
		(
			(
				lv_chance_8_0=RULE_INT
				{
					newLeafNode(lv_chance_8_0, grammarAccess.getRandomBetweenRoundAccess().getChanceINTTerminalRuleCall_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRandomBetweenRoundRule());
					}
					setWithLastConsumed(
						$current,
						"chance",
						lv_chance_8_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_9=')'
		{
			newLeafNode(otherlv_9, grammarAccess.getRandomBetweenRoundAccess().getRightParenthesisKeyword_9());
		}
	)
;

// Entry rule entryRuleCondition
entryRuleCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionRule()); }
	iv_ruleCondition=ruleCondition
	{ $current=$iv_ruleCondition.current; }
	EOF;

// Rule Condition
ruleCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='CondID'
			{
				newLeafNode(otherlv_0, grammarAccess.getConditionAccess().getCondIDKeyword_0_0());
			}
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getConditionAccess().getLeftParenthesisKeyword_0_1());
			}
			(
				(
					lv_name_2_0=RULE_ID
					{
						newLeafNode(lv_name_2_0, grammarAccess.getConditionAccess().getNameIDTerminalRuleCall_0_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConditionRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_2_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getConditionAccess().getRightParenthesisKeyword_0_3());
			}
		)
		    |
		(
			otherlv_4='Condition'
			{
				newLeafNode(otherlv_4, grammarAccess.getConditionAccess().getConditionKeyword_1_0());
			}
			(
				(
					lv_name_5_0=RULE_ID
					{
						newLeafNode(lv_name_5_0, grammarAccess.getConditionAccess().getNameIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConditionRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_5_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)?
			otherlv_6='{'
			{
				newLeafNode(otherlv_6, grammarAccess.getConditionAccess().getLeftCurlyBracketKeyword_1_2());
			}
			(
				otherlv_7='imports'
				{
					newLeafNode(otherlv_7, grammarAccess.getConditionAccess().getImportsKeyword_1_3_0());
				}
				otherlv_8='{'
				{
					newLeafNode(otherlv_8, grammarAccess.getConditionAccess().getLeftCurlyBracketKeyword_1_3_1());
				}
				(
					(
						lv_imports_9_0=RULE_CODE_BOX
						{
							newLeafNode(lv_imports_9_0, grammarAccess.getConditionAccess().getImportsCODE_BOXTerminalRuleCall_1_3_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getConditionRule());
							}
							setWithLastConsumed(
								$current,
								"imports",
								lv_imports_9_0,
								"org.xtext.Agen.CODE_BOX");
						}
					)
				)
				otherlv_10='}'
				{
					newLeafNode(otherlv_10, grammarAccess.getConditionAccess().getRightCurlyBracketKeyword_1_3_3());
				}
				otherlv_11=','
				{
					newLeafNode(otherlv_11, grammarAccess.getConditionAccess().getCommaKeyword_1_3_4());
				}
				otherlv_12='code'
				{
					newLeafNode(otherlv_12, grammarAccess.getConditionAccess().getCodeKeyword_1_3_5());
				}
				otherlv_13='{'
				{
					newLeafNode(otherlv_13, grammarAccess.getConditionAccess().getLeftCurlyBracketKeyword_1_3_6());
				}
			)?
			(
				(
					lv_code_14_0=RULE_CODE_BOX
					{
						newLeafNode(lv_code_14_0, grammarAccess.getConditionAccess().getCodeCODE_BOXTerminalRuleCall_1_4_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConditionRule());
						}
						setWithLastConsumed(
							$current,
							"code",
							lv_code_14_0,
							"org.xtext.Agen.CODE_BOX");
					}
				)
			)
			otherlv_15='}'
			{
				newLeafNode(otherlv_15, grammarAccess.getConditionAccess().getRightCurlyBracketKeyword_1_5());
			}
		)
	)
;

// Entry rule entryRuleWhere
entryRuleWhere returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWhereRule()); }
	iv_ruleWhere=ruleWhere
	{ $current=$iv_ruleWhere.current; }
	EOF;

// Rule Where
ruleWhere returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='whereToExecute'
		{
			newLeafNode(otherlv_0, grammarAccess.getWhereAccess().getWhereToExecuteKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getWhereAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getWhereAccess().getJoinTypeJOIN_TYPEEnumRuleCall_2_0_0());
					}
					lv_joinType_2_0=ruleJOIN_TYPE
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getWhereRule());
						}
						set(
							$current,
							"joinType",
							lv_joinType_2_0,
							"org.xtext.Agen.JOIN_TYPE");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=';'
			{
				newLeafNode(otherlv_3, grammarAccess.getWhereAccess().getSemicolonKeyword_2_1());
			}
		)?
		(
			(
				lv_name_4_0=RULE_STRING
				{
					newLeafNode(lv_name_4_0, grammarAccess.getWhereAccess().getNameSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWhereRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getWhereAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Rule syncpointOnFail
rulesyncpointOnFail returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='continue'
			{
				$current = grammarAccess.getSyncpointOnFailAccess().getContinueEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getSyncpointOnFailAccess().getContinueEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='retry'
			{
				$current = grammarAccess.getSyncpointOnFailAccess().getRetryEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getSyncpointOnFailAccess().getRetryEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule syncpointType
rulesyncpointType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='onetime'
			{
				$current = grammarAccess.getSyncpointTypeAccess().getOneTimeEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getSyncpointTypeAccess().getOneTimeEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='recurrent'
			{
				$current = grammarAccess.getSyncpointTypeAccess().getRecurrentEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getSyncpointTypeAccess().getRecurrentEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule AlterPacketFaultType
ruleAlterPacketFaultType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='random'
			{
				$current = grammarAccess.getAlterPacketFaultTypeAccess().getRANDOMEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getAlterPacketFaultTypeAccess().getRANDOMEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='zero'
			{
				$current = grammarAccess.getAlterPacketFaultTypeAccess().getZEROEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getAlterPacketFaultTypeAccess().getZEROEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule JOIN_TYPE
ruleJOIN_TYPE returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Before'
			{
				$current = grammarAccess.getJOIN_TYPEAccess().getBEFOREEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getJOIN_TYPEAccess().getBEFOREEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='After'
			{
				$current = grammarAccess.getJOIN_TYPEAccess().getAFTEREnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getJOIN_TYPEAccess().getAFTEREnumLiteralDeclaration_1());
			}
		)
	)
;

RULE_CODE_BOX : '///' ( options {greedy=false;} : . )*'///';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
