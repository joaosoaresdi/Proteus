/**
 * generated by Xtext 2.25.0
 */
package org.xtext.agen.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.agen.AgenPackage;
import org.xtext.agen.ExecParams;
import org.xtext.agen.JOIN_TYPE;
import org.xtext.agen.What;
import org.xtext.agen.When;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Exec Params</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.agen.impl.ExecParamsImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.agen.impl.ExecParamsImpl#getWhere <em>Where</em>}</li>
 *   <li>{@link org.xtext.agen.impl.ExecParamsImpl#getWhen <em>When</em>}</li>
 *   <li>{@link org.xtext.agen.impl.ExecParamsImpl#getWhat <em>What</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ExecParamsImpl extends MinimalEObjectImpl.Container implements ExecParams
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getWhere() <em>Where</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWhere()
   * @generated
   * @ordered
   */
  protected static final JOIN_TYPE WHERE_EDEFAULT = JOIN_TYPE.BEFORE;

  /**
   * The cached value of the '{@link #getWhere() <em>Where</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWhere()
   * @generated
   * @ordered
   */
  protected JOIN_TYPE where = WHERE_EDEFAULT;

  /**
   * The cached value of the '{@link #getWhen() <em>When</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWhen()
   * @generated
   * @ordered
   */
  protected When when;

  /**
   * The cached value of the '{@link #getWhat() <em>What</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWhat()
   * @generated
   * @ordered
   */
  protected What what;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ExecParamsImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AgenPackage.Literals.EXEC_PARAMS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AgenPackage.EXEC_PARAMS__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public JOIN_TYPE getWhere()
  {
    return where;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setWhere(JOIN_TYPE newWhere)
  {
    JOIN_TYPE oldWhere = where;
    where = newWhere == null ? WHERE_EDEFAULT : newWhere;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AgenPackage.EXEC_PARAMS__WHERE, oldWhere, where));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public When getWhen()
  {
    return when;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetWhen(When newWhen, NotificationChain msgs)
  {
    When oldWhen = when;
    when = newWhen;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, AgenPackage.EXEC_PARAMS__WHEN, oldWhen, newWhen);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setWhen(When newWhen)
  {
    if (newWhen != when)
    {
      NotificationChain msgs = null;
      if (when != null)
        msgs = ((InternalEObject)when).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - AgenPackage.EXEC_PARAMS__WHEN, null, msgs);
      if (newWhen != null)
        msgs = ((InternalEObject)newWhen).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - AgenPackage.EXEC_PARAMS__WHEN, null, msgs);
      msgs = basicSetWhen(newWhen, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AgenPackage.EXEC_PARAMS__WHEN, newWhen, newWhen));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public What getWhat()
  {
    return what;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetWhat(What newWhat, NotificationChain msgs)
  {
    What oldWhat = what;
    what = newWhat;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, AgenPackage.EXEC_PARAMS__WHAT, oldWhat, newWhat);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setWhat(What newWhat)
  {
    if (newWhat != what)
    {
      NotificationChain msgs = null;
      if (what != null)
        msgs = ((InternalEObject)what).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - AgenPackage.EXEC_PARAMS__WHAT, null, msgs);
      if (newWhat != null)
        msgs = ((InternalEObject)newWhat).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - AgenPackage.EXEC_PARAMS__WHAT, null, msgs);
      msgs = basicSetWhat(newWhat, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AgenPackage.EXEC_PARAMS__WHAT, newWhat, newWhat));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case AgenPackage.EXEC_PARAMS__WHEN:
        return basicSetWhen(null, msgs);
      case AgenPackage.EXEC_PARAMS__WHAT:
        return basicSetWhat(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AgenPackage.EXEC_PARAMS__NAME:
        return getName();
      case AgenPackage.EXEC_PARAMS__WHERE:
        return getWhere();
      case AgenPackage.EXEC_PARAMS__WHEN:
        return getWhen();
      case AgenPackage.EXEC_PARAMS__WHAT:
        return getWhat();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AgenPackage.EXEC_PARAMS__NAME:
        setName((String)newValue);
        return;
      case AgenPackage.EXEC_PARAMS__WHERE:
        setWhere((JOIN_TYPE)newValue);
        return;
      case AgenPackage.EXEC_PARAMS__WHEN:
        setWhen((When)newValue);
        return;
      case AgenPackage.EXEC_PARAMS__WHAT:
        setWhat((What)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AgenPackage.EXEC_PARAMS__NAME:
        setName(NAME_EDEFAULT);
        return;
      case AgenPackage.EXEC_PARAMS__WHERE:
        setWhere(WHERE_EDEFAULT);
        return;
      case AgenPackage.EXEC_PARAMS__WHEN:
        setWhen((When)null);
        return;
      case AgenPackage.EXEC_PARAMS__WHAT:
        setWhat((What)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AgenPackage.EXEC_PARAMS__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case AgenPackage.EXEC_PARAMS__WHERE:
        return where != WHERE_EDEFAULT;
      case AgenPackage.EXEC_PARAMS__WHEN:
        return when != null;
      case AgenPackage.EXEC_PARAMS__WHAT:
        return what != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", where: ");
    result.append(where);
    result.append(')');
    return result.toString();
  }

} //ExecParamsImpl
