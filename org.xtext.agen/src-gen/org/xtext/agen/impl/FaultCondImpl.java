/**
 * generated by Xtext 2.25.0
 */
package org.xtext.agen.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.agen.AgenPackage;
import org.xtext.agen.CodeBlock;
import org.xtext.agen.FaultCond;
import org.xtext.agen.When;
import org.xtext.agen.Where;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Fault Cond</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.agen.impl.FaultCondImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.agen.impl.FaultCondImpl#getWhere <em>Where</em>}</li>
 *   <li>{@link org.xtext.agen.impl.FaultCondImpl#getWhen <em>When</em>}</li>
 *   <li>{@link org.xtext.agen.impl.FaultCondImpl#getExtraData <em>Extra Data</em>}</li>
 * </ul>
 *
 * @generated
 */
public class FaultCondImpl extends TypesImpl implements FaultCond
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getWhere() <em>Where</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWhere()
   * @generated
   * @ordered
   */
  protected Where where;

  /**
   * The cached value of the '{@link #getWhen() <em>When</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWhen()
   * @generated
   * @ordered
   */
  protected When when;

  /**
   * The cached value of the '{@link #getExtraData() <em>Extra Data</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExtraData()
   * @generated
   * @ordered
   */
  protected CodeBlock extraData;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected FaultCondImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AgenPackage.Literals.FAULT_COND;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AgenPackage.FAULT_COND__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Where getWhere()
  {
    return where;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetWhere(Where newWhere, NotificationChain msgs)
  {
    Where oldWhere = where;
    where = newWhere;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, AgenPackage.FAULT_COND__WHERE, oldWhere, newWhere);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setWhere(Where newWhere)
  {
    if (newWhere != where)
    {
      NotificationChain msgs = null;
      if (where != null)
        msgs = ((InternalEObject)where).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - AgenPackage.FAULT_COND__WHERE, null, msgs);
      if (newWhere != null)
        msgs = ((InternalEObject)newWhere).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - AgenPackage.FAULT_COND__WHERE, null, msgs);
      msgs = basicSetWhere(newWhere, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AgenPackage.FAULT_COND__WHERE, newWhere, newWhere));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public When getWhen()
  {
    return when;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetWhen(When newWhen, NotificationChain msgs)
  {
    When oldWhen = when;
    when = newWhen;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, AgenPackage.FAULT_COND__WHEN, oldWhen, newWhen);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setWhen(When newWhen)
  {
    if (newWhen != when)
    {
      NotificationChain msgs = null;
      if (when != null)
        msgs = ((InternalEObject)when).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - AgenPackage.FAULT_COND__WHEN, null, msgs);
      if (newWhen != null)
        msgs = ((InternalEObject)newWhen).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - AgenPackage.FAULT_COND__WHEN, null, msgs);
      msgs = basicSetWhen(newWhen, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AgenPackage.FAULT_COND__WHEN, newWhen, newWhen));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public CodeBlock getExtraData()
  {
    return extraData;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExtraData(CodeBlock newExtraData, NotificationChain msgs)
  {
    CodeBlock oldExtraData = extraData;
    extraData = newExtraData;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, AgenPackage.FAULT_COND__EXTRA_DATA, oldExtraData, newExtraData);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setExtraData(CodeBlock newExtraData)
  {
    if (newExtraData != extraData)
    {
      NotificationChain msgs = null;
      if (extraData != null)
        msgs = ((InternalEObject)extraData).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - AgenPackage.FAULT_COND__EXTRA_DATA, null, msgs);
      if (newExtraData != null)
        msgs = ((InternalEObject)newExtraData).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - AgenPackage.FAULT_COND__EXTRA_DATA, null, msgs);
      msgs = basicSetExtraData(newExtraData, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AgenPackage.FAULT_COND__EXTRA_DATA, newExtraData, newExtraData));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case AgenPackage.FAULT_COND__WHERE:
        return basicSetWhere(null, msgs);
      case AgenPackage.FAULT_COND__WHEN:
        return basicSetWhen(null, msgs);
      case AgenPackage.FAULT_COND__EXTRA_DATA:
        return basicSetExtraData(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AgenPackage.FAULT_COND__NAME:
        return getName();
      case AgenPackage.FAULT_COND__WHERE:
        return getWhere();
      case AgenPackage.FAULT_COND__WHEN:
        return getWhen();
      case AgenPackage.FAULT_COND__EXTRA_DATA:
        return getExtraData();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AgenPackage.FAULT_COND__NAME:
        setName((String)newValue);
        return;
      case AgenPackage.FAULT_COND__WHERE:
        setWhere((Where)newValue);
        return;
      case AgenPackage.FAULT_COND__WHEN:
        setWhen((When)newValue);
        return;
      case AgenPackage.FAULT_COND__EXTRA_DATA:
        setExtraData((CodeBlock)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AgenPackage.FAULT_COND__NAME:
        setName(NAME_EDEFAULT);
        return;
      case AgenPackage.FAULT_COND__WHERE:
        setWhere((Where)null);
        return;
      case AgenPackage.FAULT_COND__WHEN:
        setWhen((When)null);
        return;
      case AgenPackage.FAULT_COND__EXTRA_DATA:
        setExtraData((CodeBlock)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AgenPackage.FAULT_COND__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case AgenPackage.FAULT_COND__WHERE:
        return where != null;
      case AgenPackage.FAULT_COND__WHEN:
        return when != null;
      case AgenPackage.FAULT_COND__EXTRA_DATA:
        return extraData != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //FaultCondImpl
