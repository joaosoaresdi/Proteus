/**
 * generated by Xtext 2.25.0
 */
package org.xtext.agen.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;

import org.xtext.agen.AgenPackage;
import org.xtext.agen.FaultCond;
import org.xtext.agen.Syncpoint;
import org.xtext.agen.syncpointOnFail;
import org.xtext.agen.syncpointType;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Syncpoint</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.agen.impl.SyncpointImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.agen.impl.SyncpointImpl#getNodesDependant <em>Nodes Dependant</em>}</li>
 *   <li>{@link org.xtext.agen.impl.SyncpointImpl#getType <em>Type</em>}</li>
 *   <li>{@link org.xtext.agen.impl.SyncpointImpl#getOnFail <em>On Fail</em>}</li>
 *   <li>{@link org.xtext.agen.impl.SyncpointImpl#getFaultCond <em>Fault Cond</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SyncpointImpl extends TypesImpl implements Syncpoint
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getNodesDependant() <em>Nodes Dependant</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNodesDependant()
   * @generated
   * @ordered
   */
  protected EList<String> nodesDependant;

  /**
   * The default value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected static final syncpointType TYPE_EDEFAULT = syncpointType.ONE_TIME;

  /**
   * The cached value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected syncpointType type = TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getOnFail() <em>On Fail</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOnFail()
   * @generated
   * @ordered
   */
  protected static final syncpointOnFail ON_FAIL_EDEFAULT = syncpointOnFail.CONTINUE;

  /**
   * The cached value of the '{@link #getOnFail() <em>On Fail</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOnFail()
   * @generated
   * @ordered
   */
  protected syncpointOnFail onFail = ON_FAIL_EDEFAULT;

  /**
   * The cached value of the '{@link #getFaultCond() <em>Fault Cond</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFaultCond()
   * @generated
   * @ordered
   */
  protected FaultCond faultCond;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SyncpointImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AgenPackage.Literals.SYNCPOINT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AgenPackage.SYNCPOINT__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<String> getNodesDependant()
  {
    if (nodesDependant == null)
    {
      nodesDependant = new EDataTypeEList<String>(String.class, this, AgenPackage.SYNCPOINT__NODES_DEPENDANT);
    }
    return nodesDependant;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public syncpointType getType()
  {
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setType(syncpointType newType)
  {
    syncpointType oldType = type;
    type = newType == null ? TYPE_EDEFAULT : newType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AgenPackage.SYNCPOINT__TYPE, oldType, type));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public syncpointOnFail getOnFail()
  {
    return onFail;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOnFail(syncpointOnFail newOnFail)
  {
    syncpointOnFail oldOnFail = onFail;
    onFail = newOnFail == null ? ON_FAIL_EDEFAULT : newOnFail;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AgenPackage.SYNCPOINT__ON_FAIL, oldOnFail, onFail));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public FaultCond getFaultCond()
  {
    return faultCond;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFaultCond(FaultCond newFaultCond, NotificationChain msgs)
  {
    FaultCond oldFaultCond = faultCond;
    faultCond = newFaultCond;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, AgenPackage.SYNCPOINT__FAULT_COND, oldFaultCond, newFaultCond);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFaultCond(FaultCond newFaultCond)
  {
    if (newFaultCond != faultCond)
    {
      NotificationChain msgs = null;
      if (faultCond != null)
        msgs = ((InternalEObject)faultCond).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - AgenPackage.SYNCPOINT__FAULT_COND, null, msgs);
      if (newFaultCond != null)
        msgs = ((InternalEObject)newFaultCond).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - AgenPackage.SYNCPOINT__FAULT_COND, null, msgs);
      msgs = basicSetFaultCond(newFaultCond, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AgenPackage.SYNCPOINT__FAULT_COND, newFaultCond, newFaultCond));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case AgenPackage.SYNCPOINT__FAULT_COND:
        return basicSetFaultCond(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AgenPackage.SYNCPOINT__NAME:
        return getName();
      case AgenPackage.SYNCPOINT__NODES_DEPENDANT:
        return getNodesDependant();
      case AgenPackage.SYNCPOINT__TYPE:
        return getType();
      case AgenPackage.SYNCPOINT__ON_FAIL:
        return getOnFail();
      case AgenPackage.SYNCPOINT__FAULT_COND:
        return getFaultCond();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AgenPackage.SYNCPOINT__NAME:
        setName((String)newValue);
        return;
      case AgenPackage.SYNCPOINT__NODES_DEPENDANT:
        getNodesDependant().clear();
        getNodesDependant().addAll((Collection<? extends String>)newValue);
        return;
      case AgenPackage.SYNCPOINT__TYPE:
        setType((syncpointType)newValue);
        return;
      case AgenPackage.SYNCPOINT__ON_FAIL:
        setOnFail((syncpointOnFail)newValue);
        return;
      case AgenPackage.SYNCPOINT__FAULT_COND:
        setFaultCond((FaultCond)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AgenPackage.SYNCPOINT__NAME:
        setName(NAME_EDEFAULT);
        return;
      case AgenPackage.SYNCPOINT__NODES_DEPENDANT:
        getNodesDependant().clear();
        return;
      case AgenPackage.SYNCPOINT__TYPE:
        setType(TYPE_EDEFAULT);
        return;
      case AgenPackage.SYNCPOINT__ON_FAIL:
        setOnFail(ON_FAIL_EDEFAULT);
        return;
      case AgenPackage.SYNCPOINT__FAULT_COND:
        setFaultCond((FaultCond)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AgenPackage.SYNCPOINT__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case AgenPackage.SYNCPOINT__NODES_DEPENDANT:
        return nodesDependant != null && !nodesDependant.isEmpty();
      case AgenPackage.SYNCPOINT__TYPE:
        return type != TYPE_EDEFAULT;
      case AgenPackage.SYNCPOINT__ON_FAIL:
        return onFail != ON_FAIL_EDEFAULT;
      case AgenPackage.SYNCPOINT__FAULT_COND:
        return faultCond != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", nodesDependant: ");
    result.append(nodesDependant);
    result.append(", type: ");
    result.append(type);
    result.append(", onFail: ");
    result.append(onFail);
    result.append(')');
    return result.toString();
  }

} //SyncpointImpl
